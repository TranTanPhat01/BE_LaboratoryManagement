// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: lab.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace LabServer {
  public static partial class LabService
  {
    static readonly string __ServiceName = "ev.v1.lab.LabService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.CreateLabTestRequest> __Marshaller_ev_v1_lab_CreateLabTestRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.CreateLabTestRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.LabTestResponse> __Marshaller_ev_v1_lab_LabTestResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.LabTestResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.GetByIdRequest> __Marshaller_ev_v1_lab_GetByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.GetByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.ListLabTestsRequest> __Marshaller_ev_v1_lab_ListLabTestsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.ListLabTestsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.ListLabTestsResponse> __Marshaller_ev_v1_lab_ListLabTestsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.ListLabTestsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.CreateCriterionRequest> __Marshaller_ev_v1_lab_CreateCriterionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.CreateCriterionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.LabCriterionResponse> __Marshaller_ev_v1_lab_LabCriterionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.LabCriterionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.ListCriteriaRequest> __Marshaller_ev_v1_lab_ListCriteriaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.ListCriteriaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::LabServer.ListCriteriaResponse> __Marshaller_ev_v1_lab_ListCriteriaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::LabServer.ListCriteriaResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LabServer.CreateLabTestRequest, global::LabServer.LabTestResponse> __Method_CreateLabTest = new grpc::Method<global::LabServer.CreateLabTestRequest, global::LabServer.LabTestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateLabTest",
        __Marshaller_ev_v1_lab_CreateLabTestRequest,
        __Marshaller_ev_v1_lab_LabTestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LabServer.GetByIdRequest, global::LabServer.LabTestResponse> __Method_GetLabTest = new grpc::Method<global::LabServer.GetByIdRequest, global::LabServer.LabTestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLabTest",
        __Marshaller_ev_v1_lab_GetByIdRequest,
        __Marshaller_ev_v1_lab_LabTestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LabServer.ListLabTestsRequest, global::LabServer.ListLabTestsResponse> __Method_ListLabTests = new grpc::Method<global::LabServer.ListLabTestsRequest, global::LabServer.ListLabTestsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLabTests",
        __Marshaller_ev_v1_lab_ListLabTestsRequest,
        __Marshaller_ev_v1_lab_ListLabTestsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LabServer.CreateCriterionRequest, global::LabServer.LabCriterionResponse> __Method_CreateCriterion = new grpc::Method<global::LabServer.CreateCriterionRequest, global::LabServer.LabCriterionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateCriterion",
        __Marshaller_ev_v1_lab_CreateCriterionRequest,
        __Marshaller_ev_v1_lab_LabCriterionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LabServer.GetByIdRequest, global::LabServer.LabCriterionResponse> __Method_GetCriterion = new grpc::Method<global::LabServer.GetByIdRequest, global::LabServer.LabCriterionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCriterion",
        __Marshaller_ev_v1_lab_GetByIdRequest,
        __Marshaller_ev_v1_lab_LabCriterionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::LabServer.ListCriteriaRequest, global::LabServer.ListCriteriaResponse> __Method_ListCriteria = new grpc::Method<global::LabServer.ListCriteriaRequest, global::LabServer.ListCriteriaResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCriteria",
        __Marshaller_ev_v1_lab_ListCriteriaRequest,
        __Marshaller_ev_v1_lab_ListCriteriaResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::LabServer.LabReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of LabService</summary>
    [grpc::BindServiceMethod(typeof(LabService), "BindService")]
    public abstract partial class LabServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LabServer.LabTestResponse> CreateLabTest(global::LabServer.CreateLabTestRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LabServer.LabTestResponse> GetLabTest(global::LabServer.GetByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LabServer.ListLabTestsResponse> ListLabTests(global::LabServer.ListLabTestsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LabServer.LabCriterionResponse> CreateCriterion(global::LabServer.CreateCriterionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LabServer.LabCriterionResponse> GetCriterion(global::LabServer.GetByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::LabServer.ListCriteriaResponse> ListCriteria(global::LabServer.ListCriteriaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(LabServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CreateLabTest, serviceImpl.CreateLabTest)
          .AddMethod(__Method_GetLabTest, serviceImpl.GetLabTest)
          .AddMethod(__Method_ListLabTests, serviceImpl.ListLabTests)
          .AddMethod(__Method_CreateCriterion, serviceImpl.CreateCriterion)
          .AddMethod(__Method_GetCriterion, serviceImpl.GetCriterion)
          .AddMethod(__Method_ListCriteria, serviceImpl.ListCriteria).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, LabServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CreateLabTest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LabServer.CreateLabTestRequest, global::LabServer.LabTestResponse>(serviceImpl.CreateLabTest));
      serviceBinder.AddMethod(__Method_GetLabTest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LabServer.GetByIdRequest, global::LabServer.LabTestResponse>(serviceImpl.GetLabTest));
      serviceBinder.AddMethod(__Method_ListLabTests, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LabServer.ListLabTestsRequest, global::LabServer.ListLabTestsResponse>(serviceImpl.ListLabTests));
      serviceBinder.AddMethod(__Method_CreateCriterion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LabServer.CreateCriterionRequest, global::LabServer.LabCriterionResponse>(serviceImpl.CreateCriterion));
      serviceBinder.AddMethod(__Method_GetCriterion, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LabServer.GetByIdRequest, global::LabServer.LabCriterionResponse>(serviceImpl.GetCriterion));
      serviceBinder.AddMethod(__Method_ListCriteria, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::LabServer.ListCriteriaRequest, global::LabServer.ListCriteriaResponse>(serviceImpl.ListCriteria));
    }

  }
}
#endregion
